<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Accueil - Plateforme Médicale</title>
    <!-- Inclure Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        /* Votre CSS existant reste inchangé */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #2d3748;
            background-color: #f7fafc;
            line-height: 1.6;
        }

        /* Navbar */
        .navbar {
            background-color: #ffffff;
            padding: 1.5rem 2rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-logo {
            font-size: 1.5rem;
            font-weight: 600;
            color: #3182ce;
        }

        .nav-links {
            display: flex;
            list-style: none;
        }

        .nav-links li {
            margin-left: 2.5rem;
        }

        .nav-links a {
            text-decoration: none;
            color: #4a5568;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .nav-links a:hover {
            color: #3182ce;
        }

        /* Section Bienvenue */
        .welcome-section {
            max-width: 1200px;
            margin: 120px auto 4rem;
            padding: 0 2rem;
            text-align: center;
        }

        .welcome-section h1 {
            font-size: 2.5rem;
            color: #2d3748;
            margin-bottom: 1.5rem;
            font-weight: 700;
        }

        .welcome-section p {
            font-size: 1.2rem;
            color: #718096;
            max-width: 700px;
            margin: 0 auto 2rem;
        }

        .cta-button {
            background-color: #3182ce;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 500;
            display: inline-block;
            transition: background-color 0.3s ease;
        }

        .cta-button:hover {
            background-color: #2b6cb0;
        }

        /* Section Médecins */
        .doctors-section {
            max-width: 1200px;
            margin: 0 auto 4rem;
            padding: 0 2rem;
        }

        .doctors-section h2 {
            text-align: center;
            font-size: 2rem;
            margin-bottom: 3rem;
            color: #2d3748;
        }

        .doctors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
        }

        .doctor-card {
            background-color: #ffffff;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            transition: transform 0.3s ease;
        }

        .doctor-card:hover {
            transform: translateY(-5px);
        }

        .doctor-card h3 {
            color: #2d3748;
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
        }

        .doctor-card p {
            color: #718096;
            font-size: 1rem;
        }
    </style>
</head>


<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">MediPlan</div>
            
            <ul class="nav-links">
                <li><a href="#accueil">Accueil</a></li>
                <li><a href="#my-appointments" id="myAppointmentsLink">Mes Réservations</a></li> 
                <li><a href="/calendar">Calendrier</a></li>
                <li><a href="#contact">Contact</a></li>
                <% if (user.role === 'doctor') { %>
                    <li><a href="/dashboard/doctorDashboard">Docteur Dashboard</a></li>
                <% } %>
                <li><a href="/logout">Déconnexion</a></li> 
            </ul>
        </div>
    </nav>

    <!-- Section Bienvenue -->
    <section class="welcome-section">
        <h1>
            Bienvenue 
            <% if (user.role === 'patient') { %>
                Mr <%= user.nom %>
            <% } else if (user.role === 'doctor') { %>
                Dr. <%= user.nom %>
            <% } %>
            sur MediPlan
        </h1>
        <p>Planifiez votre consultation médicale en toute simplicité. Accès rapide aux meilleurs médecins et réservation en quelques clics.</p>
        <a href="#reservation" class="cta-button">Réserver un rendez-vous</a>
    </section>

    <!-- Section Médecins -->
    <section class="doctors-section">
        <h2>Nos Médecins</h2>
        <div class="doctors-grid">
            <% doctors.forEach(function(doctor) { %>
            <div class="doctor-card">
                <h3><%= doctor.nom %></h3>
                <p><%= doctor.specialite %></p>
                <% if (user.role === 'patient') { %>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#appointmentModal<%= doctor._id %>">
                    Réserver un rendez-vous
                </button>
                    <% } %>
                
            </div>

           <!-- Modal for Booking Appointment -->
                <div class="modal fade" id="appointmentModal<%= doctor._id %>" tabindex="-1" aria-labelledby="appointmentModalLabel<%= doctor._id %>" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="appointmentModalLabel<%= doctor._id %>">Réserver un rendez-vous avec <%= doctor.nom %></h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form class="appointment-form" data-doctor-id="<%= doctor._id %>">
                                    <div class="mb-3">
                                        <label for="patientName<%= doctor._id %>" class="form-label">Votre nom</label>
                                        <input type="text" class="form-control" id="patientName<%= doctor._id %>" name="patientName" value="<%= user ? user.nom : '' %>" readonly>
                                    </div>
                                    <div class="mb-3">
                                        <label for="appointmentDate<%= doctor._id %>" class="form-label">Date et heure</label>
                                        <input type="datetime-local" class="form-control" id="appointmentDate<%= doctor._id %>" name="appointmentDate" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="notes<%= doctor._id %>" class="form-label">Remarques</label>
                                        <textarea class="form-control" id="notes<%= doctor._id %>" name="notes"></textarea>
                                    </div>
                                    <input type="hidden" name="doctorId" value="<%= doctor._id %>">
                                    <button type="submit" class="btn btn-primary">Réserver</button>
                                    <div id="errorMessage<%= doctor._id %>" class="text-danger mt-2" style="display: none;"></div> <!-- Error message display -->
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
           
            <% }) %>
        </div>
    </section>
    <!-- Modal for My Appointments -->
<div class="modal fade" id="myAppointmentsModal" tabindex="-1" aria-labelledby="myAppointmentsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myAppointmentsModalLabel">Mes Réservations</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="appointmentsList">
                    <!-- Les réservations seront insérées ici dynamiquement -->
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- Inclure Bootstrap JS et dépendances -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                window.location.href = '/login';
                return;
            }
        
            try {
                const response = await fetch('/dashboard', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
        
                if (!response.ok) {
                    if (response.status === 401) {
                        // Token peut-être expiré, tenter de rafraîchir
                        await refreshToken();
                        window.location.reload(); // Recharge la page après rafraîchissement
                    } else {
                        throw new Error('Erreur lors du chargement du dashboard');
                    }
                }
            } catch (error) {
                console.error('Erreur lors de la vérification du dashboard :', error);
                window.location.href = '/login';
            }
        });
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const forms = document.querySelectorAll('.appointment-form');
            
                forms.forEach(form => {
                    form.addEventListener('submit', async (e) => {
                        e.preventDefault(); // Empêche le rechargement de la page
            
                        // Récupérer les données du formulaire
                        const doctorId = form.getAttribute('data-doctor-id');
                        const appointmentDate = form.querySelector('input[name="appointmentDate"]').value;
                        const notes = form.querySelector('textarea[name="notes"]').value;
                        const patientName = form.querySelector('input[name="patientName"]').value;
                        const token = localStorage.getItem('accessToken');
            
                        // Vérifier si l'utilisateur est connecté
                        if (!token) {
                            alert('Vous devez être connecté pour réserver un rendez-vous.');
                            window.location.href = '/login';
                            return;
                        }
            
                        // Vérifier si la date est valide
                        if (!appointmentDate) {
                            const errorDiv = form.querySelector('.text-danger');
                            errorDiv.textContent = 'Veuillez sélectionner une date et une heure.';
                            errorDiv.style.display = 'block';
                            return;
                        }
            
                        try {
                            const response = await fetch('/appointments/create', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': `Bearer ${token}`
                                },
                                body: JSON.stringify({
                                    doctorId,
                                    appointmentDate,
                                    notes
                                })
                            });
            
                            const result = await response.json();
            
                            if (response.ok) {
                                alert('Rendez-vous réservé avec succès !');
                                form.reset(); // Réinitialise le formulaire
                                bootstrap.Modal.getInstance(form.closest('.modal')).hide(); // Ferme la modale
                            } else {
                                const errorDiv = form.querySelector('.text-danger');
                                errorDiv.textContent = result.message || 'Erreur lors de la réservation';
                                errorDiv.style.display = 'block';
                            }
                        } catch (error) {
                            console.error('Erreur lors de la réservation :', error);
                            const errorDiv = form.querySelector('.text-danger');
                            errorDiv.textContent = 'Erreur serveur. Veuillez réessayer.';
                            errorDiv.style.display = 'block';
                        }
                    });
                });
            });
            </script>
            <script>
                document.addEventListener('DOMContentLoaded', () => {
                    const myAppointmentsLink = document.getElementById('myAppointmentsLink');
                    const appointmentsList = document.getElementById('appointmentsList');
                
                    myAppointmentsLink.addEventListener('click', async (e) => {
                        e.preventDefault(); // Empêche le comportement par défaut du lien
                
                        const token = localStorage.getItem('accessToken');
                        if (!token) {
                            alert('Vous devez être connecté pour voir vos réservations.');
                            window.location.href = '/login';
                            return;
                        }
                
                        try {
                            const response = await fetch('/appointments', {
                                method: 'GET',
                                headers: {
                                    'Authorization': `Bearer ${token}`
                                }
                            });
                
                            const result = await response.json();
                
                            if (response.ok) {
                                // Vider la liste actuelle
                                appointmentsList.innerHTML = '';
                
                                if (result.data.length === 0) {
                                    appointmentsList.innerHTML = '<p>Aucune réservation trouvée.</p>';
                                } else {
                                    result.data.forEach(appointment => {
    const date = new Date(appointment.date).toLocaleString('fr-FR');
    const doctorName = appointment.doctor.nom;
    const status = appointment.status;

                                        const appointmentItem = `
                                            <div class="card mb-3">
                                                <div class="card-body">
                                                    <h5 class="card-title">Dr. ${doctorName}</h5>
                                                    <p class="card-text">Date : ${date}</p>
                                                    <p class="card-text">Statut : ${status}</p>
                                                    <p class="card-text">Remarques : ${appointment.notes || 'Aucune'}</p>
                                                    <button class="btn btn-info btn-sm view-details" data-appointment-id="${appointment._id}">Détails</button>
                                                </div>
                                            </div>
                                        `;
                                        appointmentsList.innerHTML += appointmentItem;
                                    });
                               }
                
                                // Afficher la modale
                                const modal = new bootstrap.Modal(document.getElementById('myAppointmentsModal'));
                                modal.show();
                            } else {
                                appointmentsList.innerHTML = `<p class="text-danger">${result.message || 'Erreur lors du chargement des réservations'}</p>`;
                                const modal = new bootstrap.Modal(document.getElementById('myAppointmentsModal'));
                                modal.show();
                            }
                        } catch (error) {
                            console.error('Erreur lors de la récupération des réservations :', error);
                            appointmentsList.innerHTML = '<p class="text-danger">Erreur serveur. Veuillez réessayer.</p>';
                            const modal = new bootstrap.Modal(document.getElementById('myAppointmentsModal'));
                            modal.show();
                        }
                    });
                });
                </script>
</body>
</html>