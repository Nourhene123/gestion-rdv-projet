<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Connexion</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: linear-gradient(135deg, #d0d2d4, #f0eaed);
            font-family: 'Poppins', sans-serif;
        }
        .container {
            display: flex;
            background: white;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 800px;
        }
        .left-section {
            background: linear-gradient(135deg, #3182ce, #e2d8eb);
            color: white;
            width: 40%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        .left-section h2 {
            font-size: 24px;
            margin-bottom: 10px;
        }
        .right-section {
            width: 60%;
            padding: 40px;
        }
        form {
            display: flex;
            flex-direction: column;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            font-weight: 600;
        }
        input {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        button {
            background: #3182ce;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        button:hover {
            background: #3182ce;
        }
        .text-center {
            margin-top: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="left-section">
            <h2>Bienvenue</h2>
        </div>
        <div class="right-section">
            <form id="loginForm">
                <div style="text-align: center;">
                    <h1>Connexion</h1>
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" placeholder="Votre email" required>
                </div>
                <div class="form-group">
                    <label for="password">Mot de passe</label>
                    <input type="password" id="password" name="password" placeholder="Votre mot de passe" required>
                </div>
                <button type="submit">Se connecter</button>
            </form>
            <div class="text-center">
                <a href="/register">Pas encore inscrit ? Inscrivez-vous</a>
            </div>
        </div>
    </div><script>
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
        
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
        
            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });
        
                const result = await response.json();
                console.log('Réponse de /login:', result);
        
                if (result.success) {
                    localStorage.setItem('accessToken', result.accessToken);
                    localStorage.setItem('refreshToken', result.refreshToken);
                    console.log('Tokens stockés:', {
                        accessToken: localStorage.getItem('accessToken'),
                        refreshToken: localStorage.getItem('refreshToken')
                    });
        
                    // Vérifie /dashboard avec le token
                    const dashboardResponse = await fetch('/dashboard', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${result.accessToken}`
                        }
                    });
        
                    if (dashboardResponse.ok) {
                        if (result.role === 'doctor') {
                            window.location.href = '/'; // Redirige seulement si OK
                        } else {
                            window.location.href = '/'; // Redirige seulement si OK
                        }
                        
                        //window.location.href = '/dashboard'; // Redirige seulement si OK
                    } else {
                        throw new Error('Accès au dashboard refusé');
                    }
                } else {
                    alert(result.message || 'Erreur lors de la connexion.');
                }
            } catch (error) {
                console.error('Erreur lors de la connexion ou du chargement du dashboard :', error);
                alert('Une erreur est survenue. Veuillez réessayer.');
            }
        });
        </script>
</body>
</html>